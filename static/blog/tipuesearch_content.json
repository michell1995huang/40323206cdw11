{"pages":[{"tags":"bg5","text":"啟動 cdw11 協同專案 pelican 網誌位置: http://cdw11-ag100.rhcloud.com/static/ 分組程式: http://cdw11-ag100.rhcloud.com/option fileuploadform: http://cdw11-ag100.rhcloud.com/fileuploadform imageuploadform: http://cdw11-ag100.rhcloud.com/imageuploadform 請各組在 CDW11 下課前完成下列3個圖形的零件組合繪圖:","url":"./40323253-cdw11-bao-gao.html","title":"40323253 cdw11 報告"},{"tags":"bg5","text":"啟動 cdw11 協同專案 pelican 網誌位置: http://cdw11-ag100.rhcloud.com/static/ 分組程式: http://cdw11-ag100.rhcloud.com/option fileuploadform: http://cdw11-ag100.rhcloud.com/fileuploadform imageuploadform: http://cdw11-ag100.rhcloud.com/imageuploadform 請各組在 CDW11 下課前完成下列3個圖形的零件組合繪圖:","url":"./40323217-cdw11-bao-gao.html","title":"40323217 cdw11 報告"},{"tags":"bg5","text":"啟動 cdw11 協同專案 pelican 網誌位置: http://cdw11-ag100.rhcloud.com/static/blog/40323204-cdw11-bao-gao.html 鍊條繪圖:","url":"./40323204-cdw11-bao-gao.html","title":"40323204 cdw11 報告"},{"tags":"bg5","text":"啟動 cdw11 協同專案 pelican 網誌位置: http://cdw11-ag100.rhcloud.com/static/ 分組程式: http://cdw11-ag100.rhcloud.com/option fileuploadform: http://cdw11-ag100.rhcloud.com/fileuploadform imageuploadform: http://cdw11-ag100.rhcloud.com/imageuploadform 請各組在 CDW11 下課前完成下列3個圖形的零件組合繪圖:","url":"./40323255-cdw11-bao-gao.html","title":"40323255 cdw11 報告"},{"tags":"bg5","text":"啟動 cdw11 協同專案 鍊條&齒輪 pelican 網誌位置: http://cdw11-ag100.rhcloud.com/static/ 分組程式: http://cdw11-ag100.rhcloud.com/option fileuploadform: http://cdw11-ag100.rhcloud.com/fileuploadform imageuploadform: http://cdw11-ag100.rhcloud.com/imageuploadform ★課程目標：將鍊條轉為垂直(逆轉90度) ★修改過程： 1.先複製老師的鏈條程式進行@Auto 2.進入eighteenthirty的節點環境中 3.找到first_degree旋轉90度(+90) (一共有4個) 4.在對鍊條位置做微調 X軸和Y軸在程式的對應分別是p和k ★鍊條成果的Openshift連結： http://cdw11bg5-40323206.rhcloud.com/bg5_40323206_2/eighteenthirty ★課程目標：在近端修改齒輪的數量&規格 ★齒輪程式： <script type=\"text/javascript\" src=\"http://brython.info/src/brython_dist.js\"></script> <script type=\"text/javascript\" src=\"http://2015fallhw.github.io/cptocadp/static/Cango-8v03.js\"></script> <script type=\"text/javascript\" src=\"http://2015fallhw.github.io/cptocadp/static/Cango2D-7v01-min.js\"></script> <script type=\"text/javascript\" src=\"http://2015fallhw.github.io/cptocadp/static/gearUtils-05.js\"></script> <script> window.onload=function(){ brython(1); } </script> <div id=\"container\"></div> <script type=\"text/python\" src=\"http://cadlab.mde.tw/post/by/spur.js\" id=\"spurmain\"></script> <script type=\"text/python\"> import spurmain from browser import document, html 利用 Brython 的 document 建立一個 id 為 container 的 div 區域, 然後在其中放入對應的 html 標註 container = document['container'] 3個齒輪的齒數 n1 = 17 n2 = 29 n3 = 15 根據繪圖的 3 個齒輪大小計算所需的畫布高度 height = 1.2 800 0.8/(int(n1)+int(n2)+int(n3))*max([int(n1), int(n2), int(n3)]) 決定畫布的 id 字串 id = \"gear\" 利用 Brython 的 html 方法建立 CANVAS canvas = html.CANVAS(id=id, width=800, height=height) 將所建立的 canvas 畫布標註放入 container container <= canvas m 為模數, 根據畫布的寬度, 計算適合的模數大小 Module = mm of pitch diameter per tooth 利用 80% 的畫布寬度進行繪圖 計算模數的對應尺寸 m = canvas.width*0.8/(n1+n2+n3) 根據齒數與模組計算各齒輪的節圓半徑 pr1 = n1 m/2 pr2 = n2 m/2 pr3 = n3*m/2 畫布左右兩側都保留畫布寬度的 10% 依此計算對應的最左邊齒輪的軸心座標 cx = canvas.width*0.1+pr1 cy = canvas.height/2 pa 為壓力角 pa = 25 這裡的齒輪繪圖以所導入的 spurmain 模組中的 Spur 類別建立對應的 gear 變數, 且宣告畫布 id gear = spurmain.Spur(id) 畫最左邊齒輪, 定位線旋轉角為 0, 軸心座標 (cx, cy) gear.spur(cx, cy, m, n1, pa, 0) 第2個齒輪將原始的定位線逆時鐘轉 180 度後, 與第1個齒輪正好齒頂與齒頂對齊 只要第2個齒輪再逆時鐘或順時鐘轉動半齒的角度, 即可完成囓合 每一個齒分別包括從齒根到齒頂的範圍, 涵蓋角度為 360/n, 因此所謂的半齒角度為 180/n gear.spur(cx+pr1+pr2, cy, m, n2, pa, 180-180/n2) 第2齒與第3齒的囓合, 首先假定第2齒的定位線在 theta 角為 0 的原始位置 如此, 第3齒只要逆時鐘旋轉 180 度後, 再逆時鐘或順時鐘轉動半齒的角度, 即可與第2齒囓合 但是第2齒為了與第一齒囓合時, 已經從原始定位線轉了 180-180/n2 度 而當第2齒從與第3齒囓合的定位線, 逆時鐘旋轉 180-180/n2 角度後, 原先囓合的第3齒必須要再配合旋轉 (180-180/n2 )*n2/n3 gear.spur(cx+pr1+pr2+pr2+pr3, cy, m, n3, pa, 180-180/n3+(180-180/n2) n2/n3) </script> ★修改過程： 1.把程式放在SciTE存成 .html在近端執行 2.新增齒輪 n4 .n5 ....... Ex：n4 = 23 3.修改模數的對應尺寸 (程式第32行) Ex：m = canvas.width 0.8/(n1+n2+n3+n4) 4.設定新齒輪的節圓半徑 (程式34行開始) Ex：pr4 = n4 m/2 5.定義新增的齒輪\u0005，讓它們跟原本的齒輪嚙合 (程式第47行開始) Ex：spur(cx+pr1+pr2+pr2+pr3+pr3+pr4, cy, m, n4, pa, (180-180/n4)+(180-180/n3) n3+(180-180/n2)*n2/n4) ★修改成果： ★Onshape繪製模擬： ★Onshape繪製步驟： 1.點選工具列最右邊的「+」符號 2.搜尋spur導入齒輪 〈工具列會新增一個「SG」〉 3.之後點選SG就可以呼叫齒輪 4.設定呼叫出來的齒輪齒數＆模數 〈每個齒輪的模數要一樣才能配合喔！〉 5.齒輪都畫好後畫一個固定的板子 6.板子上的圓柱直徑=齒輪的中心孔 每個圓柱的圓心距離為需要進行嚙合的齒輪節圓半徑相加 節圓半徑=模數x齒數/2 7.進入組裝頁面(Assembly)進行組裝 8.呼叫固定板與齒輪 每個齒輪與固定板的接合都使用Revolute mate 〈建議完成一個零件的接合動作再呼叫下一個〉 9.選擇要嚙合的兩個齒輪後再選擇嚙合作設定，設定值為前齒輪齒數(帶動)/後齒輪齒數(被帶動) ★Onshape小提醒： ★Onshape繪製連結： https://cad.onshape.com/documents/0c9c9205a75d6de68a06275b/w/d9cad3f73d10b47057af427f/e/694535ec76f28db658c6f238 ★心得： 期中後的課程協同性感覺沒有期中前多，都是一個人就可以獨自完成，然後我上課幾乎都在放空，應該說......我覺得被動性的學習目標變淺了，需要比較自發去了解及應用鍊條&齒輪，可是我就沒有頭緒，一個沒有目標的狀態。 6/16更新 今天用Onshape畫了齒輪的模擬，還是沒有感覺到協同性，可是有學到東西，是非常有收穫的一天。首先，因為我對齒輪沒有太多的了解，連最基本的除了上課有提到的，我都不知道，起初我很不願意做這項任務，因為這完全是我的罩門，可是因為用導入的方式，讓我可以不用從頭開始〈畫齒輪〉，所以容易了不少。再來就是設定齒輪的齒數和模數而已，其中每個齒輪的模數要一樣，才能互相配合，對我而言最困難的在於計算起始角度，實際上我都是參考已經有成功做出來的人的計算方式，原理還要研究......","url":"./40323206-cdw11-bao-gao.html","title":"40323206 cdw11 報告"},{"tags":"ag100","text":"啟動 cdw11 協同專案 pelican 網誌位置: http://cdw11-ag100.rhcloud.com/static/ 分組程式: http://cdw11-ag100.rhcloud.com/option fileuploadform: http://cdw11-ag100.rhcloud.com/fileuploadform imageuploadform: http://cdw11-ag100.rhcloud.com/imageuploadform 請各組在 CDW11 下課前完成下列3個圖形的零件組合繪圖:","url":"./40323199-cdw11-bao-gao.html","title":"40323199 cdw11 報告"}]}